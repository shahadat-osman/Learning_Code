//  main.cpp
//  Lab_CSE_322
//  Mid Point Circle Draw

#include <iostream>
#include <GLUT/glut.h>
using namespace std;

float r, Xc, Yc, x, y, P;

void display(void)
{
    P = 1 - r;
    x = 0;
    y = r;

    while (x <= y)
    {
        glBegin(GL_POINTS);
            glVertex2f(Xc + x, Yc + y);
            glVertex2f(Xc + y, Yc + x);
            glVertex2f(Xc - y, Yc + x);
            glVertex2f(Xc - x, Yc + y);
            glVertex2f(Xc - x, Yc - y);
            glVertex2f(Xc - y, Yc - x);
            glVertex2f(Xc + y, Yc - x);
            glVertex2f(Xc + x, Yc - y);
        glEnd();

        if (P < 0)
        {
            x++;
            P = P + (2 * x) + 3;
        }

        else
        {
            x++;
            y--;
            P = P + 2 * (x - y) + 5;
        }
    }

    glFlush();
}

void init(void)
{
    glutCreateWindow("Mid Point Circle Draw");
    glClear(GL_COLOR_BUFFER_BIT);
    glClearColor(0, 0, 0, 0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-100, 100, -100, 100);
}

int main(int argc, char **argv)
{
    //cout << "Enter Radius: ";
    //cin >> r;
    //cout << "Enter Center: ";
    //cin >> Xc >> Yc;
    
    
    r = 15;
    Xc=0; Yc=0;
    
    cout<<"Radius = "<<r<<endl;
    cout<<"Center = "<<Xc<<" "<<Yc<<endl;

    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(550, 550);
    glutInitWindowPosition(850, 150);
    init();
    glutDisplayFunc(display);
    glutMainLoop();

    return 0;
}

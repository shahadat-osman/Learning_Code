//  main.cpp
//  Lab_CSE_322
//  Gasket Draw

#include <iostream>
#include <GLUT/glut.h>
using namespace std;

void triangle(float x1, float y1, float x2, float y2, float x3, float y3)
{
    glBegin(GL_TRIANGLES);
    glVertex2f(x1, y1);
    glVertex2f(x2, y2);
    glVertex2f(x3, y3);
    glEnd();
}

void drawGasket(float x1, float y1, float x2, float y2, float x3, float y3, int Order)
{
    if (Order > 0)
    {
        float x12 = (x1 + x2) / 2;
        float y12 = (y1 + y2) / 2;
        float x13 = (x1 + x3) / 2;
        float y13 = (y1 + y3) / 2;
        float x23 = (x2 + x3) / 2;
        float y23 = (y2 + y3) / 2;

        drawGasket(x1, y1, x12, y12, x13, y13, Order - 1);
        drawGasket(x12, y12, x2, y2, x23, y23, Order - 1);
        drawGasket(x13, y13, x23, y23, x3, y3, Order - 1);
    }
    else
        triangle(x1, y1, x2, y2, x3, y3);
}

void display()
{
    float X1, Y1, X2, Y2, X3, Y3;
    int Order;
    
    X1 = 0;     Y1 = 0;
    X2 = 35;    Y2 = 70;
    X3 = 70;    Y3 = 0;
    Order = 3;

    drawGasket(X1, Y1, X2, Y2, X3, Y3, Order);

    glFlush();
}

void init(void)
{
    glutCreateWindow("Gasket Draw");
    glClear(GL_COLOR_BUFFER_BIT);
    glClearColor(0, 0, 0, 0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-100, 100, -100, 100);
}

int main(int argc, char **argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(550, 550);
    glutInitWindowPosition(850, 150);
    init();
    glutDisplayFunc(display);
    glutMainLoop();

    return 0;
}
